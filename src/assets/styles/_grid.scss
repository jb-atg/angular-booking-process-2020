grid {
    display: grid;
    display: -ms-grid;
    width: 100%;
    height: 100%;

}

/* --------------------------------------
/*  Variables
/* -------------------------------------- */


// Reverse order because mobile first.
$media-sizes: ("xl": "min-width: 1200px",
    "lg": "min-width: 992px",
    "md": "min-width: 768px",
    "sm": "min-width: 544px",
    "xs": "min-width: 0em"
);

$gaps: ("0.25": ".25rem",
    "0.5": ".5rem",
    "0.75": ".75rem",
    "1": "1rem",
    "1.25": "1.25rem",
    "1.5": "1.5rem",
    "1.75": "1.75rem",
    "2": "2rem",
);

$max-cells: 12;


/* Repeat Grid Mixin */

@mixin repeat($property, $iterations) {
    $value: "";
    $fr: ' 1fr ';

    @for $iteration from 1 through $iterations {
        $value: $value + $fr;
    }

    #{$property}: #{$value};
}


@mixin responsiveAtribute($attribute-name, $property-name, $size, $values) {

    @each $attribute-value,
    $property-value in $values {
        @if($size=="xs") {

            [#{$attribute-name}="#{$attribute-value}"],
            [#{$attribute-name}*="#{$size}:#{$attribute-value}"] {
                #{$property-name}: #{$property-value};
            }
        }

        @if($size !="xs") {
            [#{$attribute-name}*="#{$size}:#{$attribute-value}"] {
                #{$property-name}: #{$property-value};
            }
        }
    }
}

/* --------------------------------------
/*  Foreach
/* -------------------------------------- */

@each $size,
$i in $media-sizes {

    @media (#{$i}) {

        // Columns
        @for $iteration from 1 through $max-cells {
            @if($size=="xs") {

                [cols="#{$iteration}"],
                [cols*="#{$size}:#{$iteration}"] {
                    @include repeat("grid-template-columns", $iteration);
                    @include repeat("-ms-grid-colums", $iteration);
                }
            }

            @if($size !="xs") {
                [cols*="#{$size}:#{$iteration}"] {
                    @include repeat("grid-template-columns", $iteration);
                    @include repeat("-ms-grid-colums", $iteration);
                }
            }
        }

        // Rows
        @for $iteration from 0 through $max-cells {
            @if($size=="xs") {

                [rows="#{$iteration}"],
                [rows*="#{$size}:#{$iteration}"] {
                    @include repeat("grid-template-rows", $iteration);
                    @include repeat("-ms-grid-colums", $iteration);
                }
            }

            @if($size !="xs") {
                [rows*="#{$iteration}:#{$iteration}"] {
                    @include repeat("grid-template-rows", $iteration);
                    @include repeat("-ms-grid-colums", $iteration);
                }
            }
        }

        //Gaps
        @include responsiveAtribute("gap", "grid-gap", $size, $gaps);
    }
}
